// Generated by view binder compiler. Do not edit!
package com.example.phase_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.phase_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomDailogLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button OK;

  @NonNull
  public final Button knowMore;

  @NonNull
  public final LinearLayout llHidden;

  @NonNull
  public final Button noThanks;

  private CustomDailogLayoutBinding(@NonNull LinearLayout rootView, @NonNull Button OK,
      @NonNull Button knowMore, @NonNull LinearLayout llHidden, @NonNull Button noThanks) {
    this.rootView = rootView;
    this.OK = OK;
    this.knowMore = knowMore;
    this.llHidden = llHidden;
    this.noThanks = noThanks;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomDailogLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomDailogLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_dailog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomDailogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.OK;
      Button OK = rootView.findViewById(id);
      if (OK == null) {
        break missingId;
      }

      id = R.id.know_more;
      Button knowMore = rootView.findViewById(id);
      if (knowMore == null) {
        break missingId;
      }

      id = R.id.ll_hidden;
      LinearLayout llHidden = rootView.findViewById(id);
      if (llHidden == null) {
        break missingId;
      }

      id = R.id.no_thanks;
      Button noThanks = rootView.findViewById(id);
      if (noThanks == null) {
        break missingId;
      }

      return new CustomDailogLayoutBinding((LinearLayout) rootView, OK, knowMore, llHidden,
          noThanks);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
