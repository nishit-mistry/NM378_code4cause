// Generated by view binder compiler. Do not edit!
package com.example.phase_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.phase_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDialogAmbiguousLocationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Toolbar dialogToolbar;

  @NonNull
  public final LinearLayout locationsLinearLayout;

  @NonNull
  public final RecyclerView locationsRecyclerView;

  private FragmentDialogAmbiguousLocationBinding(@NonNull LinearLayout rootView,
      @NonNull Toolbar dialogToolbar, @NonNull LinearLayout locationsLinearLayout,
      @NonNull RecyclerView locationsRecyclerView) {
    this.rootView = rootView;
    this.dialogToolbar = dialogToolbar;
    this.locationsLinearLayout = locationsLinearLayout;
    this.locationsRecyclerView = locationsRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDialogAmbiguousLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDialogAmbiguousLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dialog_ambiguous_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDialogAmbiguousLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialogToolbar;
      Toolbar dialogToolbar = rootView.findViewById(id);
      if (dialogToolbar == null) {
        break missingId;
      }

      LinearLayout locationsLinearLayout = (LinearLayout) rootView;

      id = R.id.locationsRecyclerView;
      RecyclerView locationsRecyclerView = rootView.findViewById(id);
      if (locationsRecyclerView == null) {
        break missingId;
      }

      return new FragmentDialogAmbiguousLocationBinding((LinearLayout) rootView, dialogToolbar,
          locationsLinearLayout, locationsRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
