// Generated by view binder compiler. Do not edit!
package com.example.phase_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.phase_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListLocationRowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final CardView rowCardView;

  @NonNull
  public final TextView rowCityTextView;

  @NonNull
  public final TextView rowDescriptionTextView;

  @NonNull
  public final TextView rowIconTextView;

  @NonNull
  public final TextView rowTemperatureTextView;

  @NonNull
  public final WebView webView2;

  private ListLocationRowBinding(@NonNull CardView rootView, @NonNull LinearLayout main,
      @NonNull CardView rowCardView, @NonNull TextView rowCityTextView,
      @NonNull TextView rowDescriptionTextView, @NonNull TextView rowIconTextView,
      @NonNull TextView rowTemperatureTextView, @NonNull WebView webView2) {
    this.rootView = rootView;
    this.main = main;
    this.rowCardView = rowCardView;
    this.rowCityTextView = rowCityTextView;
    this.rowDescriptionTextView = rowDescriptionTextView;
    this.rowIconTextView = rowIconTextView;
    this.rowTemperatureTextView = rowTemperatureTextView;
    this.webView2 = webView2;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListLocationRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListLocationRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_location_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListLocationRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.main;
      LinearLayout main = rootView.findViewById(id);
      if (main == null) {
        break missingId;
      }

      CardView rowCardView = (CardView) rootView;

      id = R.id.rowCityTextView;
      TextView rowCityTextView = rootView.findViewById(id);
      if (rowCityTextView == null) {
        break missingId;
      }

      id = R.id.rowDescriptionTextView;
      TextView rowDescriptionTextView = rootView.findViewById(id);
      if (rowDescriptionTextView == null) {
        break missingId;
      }

      id = R.id.rowIconTextView;
      TextView rowIconTextView = rootView.findViewById(id);
      if (rowIconTextView == null) {
        break missingId;
      }

      id = R.id.rowTemperatureTextView;
      TextView rowTemperatureTextView = rootView.findViewById(id);
      if (rowTemperatureTextView == null) {
        break missingId;
      }

      id = R.id.webView2;
      WebView webView2 = rootView.findViewById(id);
      if (webView2 == null) {
        break missingId;
      }

      return new ListLocationRowBinding((CardView) rootView, main, rowCardView, rowCityTextView,
          rowDescriptionTextView, rowIconTextView, rowTemperatureTextView, webView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
