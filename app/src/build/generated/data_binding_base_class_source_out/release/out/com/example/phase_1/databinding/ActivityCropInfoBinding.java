// Generated by view binder compiler. Do not edit!
package com.example.phase_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.phase_1.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCropInfoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView climateLabel;

  @NonNull
  public final TextView cropClimate;

  @NonNull
  public final TextView cropCtime;

  @NonNull
  public final TextView cropCultiAt;

  @NonNull
  public final TextView cropDes;

  @NonNull
  public final TextView cropName;

  @NonNull
  public final TextView cropPh;

  @NonNull
  public final TextView cropSciName;

  @NonNull
  public final TextView cropSoil;

  @NonNull
  public final TextView cropSun;

  @NonNull
  public final TextView cropWater;

  @NonNull
  public final TextView cropnameLabel;

  @NonNull
  public final TextView cultiAtLabel;

  @NonNull
  public final TextView cultitimeLabel;

  @NonNull
  public final TextView descriptionLabel;

  @NonNull
  public final LinearLayout llScrollCropInfo;

  @NonNull
  public final TextView phLabel;

  @NonNull
  public final TextView scinameLabel;

  @NonNull
  public final FloatingActionButton share;

  @NonNull
  public final TextView soiltypeLabel;

  @NonNull
  public final TextView sunlightLabel;

  @NonNull
  public final TextView waterLabel;

  private ActivityCropInfoBinding(@NonNull RelativeLayout rootView, @NonNull TextView climateLabel,
      @NonNull TextView cropClimate, @NonNull TextView cropCtime, @NonNull TextView cropCultiAt,
      @NonNull TextView cropDes, @NonNull TextView cropName, @NonNull TextView cropPh,
      @NonNull TextView cropSciName, @NonNull TextView cropSoil, @NonNull TextView cropSun,
      @NonNull TextView cropWater, @NonNull TextView cropnameLabel, @NonNull TextView cultiAtLabel,
      @NonNull TextView cultitimeLabel, @NonNull TextView descriptionLabel,
      @NonNull LinearLayout llScrollCropInfo, @NonNull TextView phLabel,
      @NonNull TextView scinameLabel, @NonNull FloatingActionButton share,
      @NonNull TextView soiltypeLabel, @NonNull TextView sunlightLabel,
      @NonNull TextView waterLabel) {
    this.rootView = rootView;
    this.climateLabel = climateLabel;
    this.cropClimate = cropClimate;
    this.cropCtime = cropCtime;
    this.cropCultiAt = cropCultiAt;
    this.cropDes = cropDes;
    this.cropName = cropName;
    this.cropPh = cropPh;
    this.cropSciName = cropSciName;
    this.cropSoil = cropSoil;
    this.cropSun = cropSun;
    this.cropWater = cropWater;
    this.cropnameLabel = cropnameLabel;
    this.cultiAtLabel = cultiAtLabel;
    this.cultitimeLabel = cultitimeLabel;
    this.descriptionLabel = descriptionLabel;
    this.llScrollCropInfo = llScrollCropInfo;
    this.phLabel = phLabel;
    this.scinameLabel = scinameLabel;
    this.share = share;
    this.soiltypeLabel = soiltypeLabel;
    this.sunlightLabel = sunlightLabel;
    this.waterLabel = waterLabel;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCropInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCropInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_crop_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCropInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.climate_label;
      TextView climateLabel = rootView.findViewById(id);
      if (climateLabel == null) {
        break missingId;
      }

      id = R.id.crop_climate;
      TextView cropClimate = rootView.findViewById(id);
      if (cropClimate == null) {
        break missingId;
      }

      id = R.id.crop_ctime;
      TextView cropCtime = rootView.findViewById(id);
      if (cropCtime == null) {
        break missingId;
      }

      id = R.id.crop_cultiAt;
      TextView cropCultiAt = rootView.findViewById(id);
      if (cropCultiAt == null) {
        break missingId;
      }

      id = R.id.crop_des;
      TextView cropDes = rootView.findViewById(id);
      if (cropDes == null) {
        break missingId;
      }

      id = R.id.crop_name;
      TextView cropName = rootView.findViewById(id);
      if (cropName == null) {
        break missingId;
      }

      id = R.id.crop_ph;
      TextView cropPh = rootView.findViewById(id);
      if (cropPh == null) {
        break missingId;
      }

      id = R.id.crop_sciName;
      TextView cropSciName = rootView.findViewById(id);
      if (cropSciName == null) {
        break missingId;
      }

      id = R.id.crop_soil;
      TextView cropSoil = rootView.findViewById(id);
      if (cropSoil == null) {
        break missingId;
      }

      id = R.id.crop_sun;
      TextView cropSun = rootView.findViewById(id);
      if (cropSun == null) {
        break missingId;
      }

      id = R.id.crop_water;
      TextView cropWater = rootView.findViewById(id);
      if (cropWater == null) {
        break missingId;
      }

      id = R.id.cropname_label;
      TextView cropnameLabel = rootView.findViewById(id);
      if (cropnameLabel == null) {
        break missingId;
      }

      id = R.id.cultiAt_label;
      TextView cultiAtLabel = rootView.findViewById(id);
      if (cultiAtLabel == null) {
        break missingId;
      }

      id = R.id.cultitime_label;
      TextView cultitimeLabel = rootView.findViewById(id);
      if (cultitimeLabel == null) {
        break missingId;
      }

      id = R.id.description_label;
      TextView descriptionLabel = rootView.findViewById(id);
      if (descriptionLabel == null) {
        break missingId;
      }

      id = R.id.llScroll_cropInfo;
      LinearLayout llScrollCropInfo = rootView.findViewById(id);
      if (llScrollCropInfo == null) {
        break missingId;
      }

      id = R.id.ph_label;
      TextView phLabel = rootView.findViewById(id);
      if (phLabel == null) {
        break missingId;
      }

      id = R.id.sciname_label;
      TextView scinameLabel = rootView.findViewById(id);
      if (scinameLabel == null) {
        break missingId;
      }

      id = R.id.share;
      FloatingActionButton share = rootView.findViewById(id);
      if (share == null) {
        break missingId;
      }

      id = R.id.soiltype_label;
      TextView soiltypeLabel = rootView.findViewById(id);
      if (soiltypeLabel == null) {
        break missingId;
      }

      id = R.id.sunlight_label;
      TextView sunlightLabel = rootView.findViewById(id);
      if (sunlightLabel == null) {
        break missingId;
      }

      id = R.id.water_label;
      TextView waterLabel = rootView.findViewById(id);
      if (waterLabel == null) {
        break missingId;
      }

      return new ActivityCropInfoBinding((RelativeLayout) rootView, climateLabel, cropClimate,
          cropCtime, cropCultiAt, cropDes, cropName, cropPh, cropSciName, cropSoil, cropSun,
          cropWater, cropnameLabel, cultiAtLabel, cultitimeLabel, descriptionLabel,
          llScrollCropInfo, phLabel, scinameLabel, share, soiltypeLabel, sunlightLabel, waterLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
