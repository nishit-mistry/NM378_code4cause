// Generated by view binder compiler. Do not edit!
package com.example.phase_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.example.phase_1.R;
import com.miguelcatalan.materialsearchview.MaterialSearchView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScrollingBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout bottomsheet;

  @NonNull
  public final TextView citytool;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final RelativeLayout mainlay;

  @NonNull
  public final MaterialSearchView searchView;

  @NonNull
  public final Button sendData;

  @NonNull
  public final TextView todayDate;

  @NonNull
  public final TextView todayDes;

  @NonNull
  public final TextView todayDescription;

  @NonNull
  public final ImageView todayIcon;

  @NonNull
  public final TextView todayTemperature;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final FrameLayout toolbarContainer;

  @NonNull
  public final CoordinatorLayout viewApp;

  private ActivityScrollingBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout bottomsheet, @NonNull TextView citytool,
      @NonNull RelativeLayout main, @NonNull RelativeLayout mainlay,
      @NonNull MaterialSearchView searchView, @NonNull Button sendData, @NonNull TextView todayDate,
      @NonNull TextView todayDes, @NonNull TextView todayDescription, @NonNull ImageView todayIcon,
      @NonNull TextView todayTemperature, @NonNull Toolbar toolbar,
      @NonNull FrameLayout toolbarContainer, @NonNull CoordinatorLayout viewApp) {
    this.rootView = rootView;
    this.bottomsheet = bottomsheet;
    this.citytool = citytool;
    this.main = main;
    this.mainlay = mainlay;
    this.searchView = searchView;
    this.sendData = sendData;
    this.todayDate = todayDate;
    this.todayDes = todayDes;
    this.todayDescription = todayDescription;
    this.todayIcon = todayIcon;
    this.todayTemperature = todayTemperature;
    this.toolbar = toolbar;
    this.toolbarContainer = toolbarContainer;
    this.viewApp = viewApp;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScrollingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScrollingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_scrolling, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScrollingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomsheet;
      CoordinatorLayout bottomsheet = rootView.findViewById(id);
      if (bottomsheet == null) {
        break missingId;
      }

      id = R.id.citytool;
      TextView citytool = rootView.findViewById(id);
      if (citytool == null) {
        break missingId;
      }

      id = R.id.main;
      RelativeLayout main = rootView.findViewById(id);
      if (main == null) {
        break missingId;
      }

      id = R.id.mainlay;
      RelativeLayout mainlay = rootView.findViewById(id);
      if (mainlay == null) {
        break missingId;
      }

      id = R.id.search_view;
      MaterialSearchView searchView = rootView.findViewById(id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.send_data;
      Button sendData = rootView.findViewById(id);
      if (sendData == null) {
        break missingId;
      }

      id = R.id.todayDate;
      TextView todayDate = rootView.findViewById(id);
      if (todayDate == null) {
        break missingId;
      }

      id = R.id.todayDes;
      TextView todayDes = rootView.findViewById(id);
      if (todayDes == null) {
        break missingId;
      }

      id = R.id.todayDescription;
      TextView todayDescription = rootView.findViewById(id);
      if (todayDescription == null) {
        break missingId;
      }

      id = R.id.todayIcon;
      ImageView todayIcon = rootView.findViewById(id);
      if (todayIcon == null) {
        break missingId;
      }

      id = R.id.todayTemperature;
      TextView todayTemperature = rootView.findViewById(id);
      if (todayTemperature == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_container;
      FrameLayout toolbarContainer = rootView.findViewById(id);
      if (toolbarContainer == null) {
        break missingId;
      }

      CoordinatorLayout viewApp = (CoordinatorLayout) rootView;

      return new ActivityScrollingBinding((CoordinatorLayout) rootView, bottomsheet, citytool, main,
          mainlay, searchView, sendData, todayDate, todayDes, todayDescription, todayIcon,
          todayTemperature, toolbar, toolbarContainer, viewApp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
